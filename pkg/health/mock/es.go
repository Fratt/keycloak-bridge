// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudtrust/keycloak-bridge/pkg/health (interfaces: ESHealthChecker)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	health "github.com/cloudtrust/keycloak-bridge/pkg/health"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// ESHealthChecker is a mock of ESHealthChecker interface
type ESHealthChecker struct {
	ctrl     *gomock.Controller
	recorder *ESHealthCheckerMockRecorder
}

// ESHealthCheckerMockRecorder is the mock recorder for ESHealthChecker
type ESHealthCheckerMockRecorder struct {
	mock *ESHealthChecker
}

// NewESHealthChecker creates a new mock instance
func NewESHealthChecker(ctrl *gomock.Controller) *ESHealthChecker {
	mock := &ESHealthChecker{ctrl: ctrl}
	mock.recorder = &ESHealthCheckerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *ESHealthChecker) EXPECT() *ESHealthCheckerMockRecorder {
	return m.recorder
}

// HealthChecks mocks base method
func (m *ESHealthChecker) HealthChecks(arg0 context.Context) []health.ESReport {
	ret := m.ctrl.Call(m, "HealthChecks", arg0)
	ret0, _ := ret[0].([]health.ESReport)
	return ret0
}

// HealthChecks indicates an expected call of HealthChecks
func (mr *ESHealthCheckerMockRecorder) HealthChecks(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HealthChecks", reflect.TypeOf((*ESHealthChecker)(nil).HealthChecks), arg0)
}
