// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudtrust/keycloak-bridge/pkg/health (interfaces: KeycloakHealthChecker)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	health "github.com/cloudtrust/keycloak-bridge/pkg/health"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// KeycloakHealthChecker is a mock of KeycloakHealthChecker interface
type KeycloakHealthChecker struct {
	ctrl     *gomock.Controller
	recorder *KeycloakHealthCheckerMockRecorder
}

// KeycloakHealthCheckerMockRecorder is the mock recorder for KeycloakHealthChecker
type KeycloakHealthCheckerMockRecorder struct {
	mock *KeycloakHealthChecker
}

// NewKeycloakHealthChecker creates a new mock instance
func NewKeycloakHealthChecker(ctrl *gomock.Controller) *KeycloakHealthChecker {
	mock := &KeycloakHealthChecker{ctrl: ctrl}
	mock.recorder = &KeycloakHealthCheckerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *KeycloakHealthChecker) EXPECT() *KeycloakHealthCheckerMockRecorder {
	return m.recorder
}

// HealthChecks mocks base method
func (m *KeycloakHealthChecker) HealthChecks(arg0 context.Context) []health.KeycloakReport {
	ret := m.ctrl.Call(m, "HealthChecks", arg0)
	ret0, _ := ret[0].([]health.KeycloakReport)
	return ret0
}

// HealthChecks indicates an expected call of HealthChecks
func (mr *KeycloakHealthCheckerMockRecorder) HealthChecks(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HealthChecks", reflect.TypeOf((*KeycloakHealthChecker)(nil).HealthChecks), arg0)
}
